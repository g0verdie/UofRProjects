import java.util.*;
public class Solver {
	private Sudoku board;
	private Integer[][][] vars;
	
	public Solver(Sudoku board){
		this.board = board;
		setUpVars(board);
	}
	
	private void setUpVars(Sudoku board){
		int var = 1;
		vars = new Integer[board.size()][board.size()][board.size()];
		for(int x = 0; x < board.size(); x++)
			for(int y = 0; y < board.size(); y++)
				for(int z = 0; z < board.size(); z++)
					vars[x][y][z] = var++;
	}
	public ArrayList<String> allDiff(){
		ArrayList<String> constraints = new ArrayList<String>();
		
		//all spots on board have one value
		AssignValues(board,vars,constraints);
		for(int i = 0; i < board.size(); i++){
			//rows
			allDiffArcs(board.getRow(i),constraints);
			//cols
			allDiffArcs(board.getCol(i),constraints);
			//sub boards
			allDiffArcs(board.getSub(i),constraints);
		}
		return constraints;
	}
	
	//convert array of integers into binary arguments
	public void allDiffArcs(int[][] list,ArrayList<String> constraints){
		for(int i = 0; i < list.length; i++){
			for(int j = i+1; j < list.length; j++){
				for(int k = 1; k < vars[i][j].length; k++) {
					String add1 = "-"+vars[list[i][0]][list[i][1]][k]+" "+vars[list[j][0]][list[j][1]][k];
					String add2 = "-"+vars[list[j][0]][list[j][1]][k]+" "+vars[list[i][0]][list[i][1]][k];
					if(!constraints.contains(add1))
						constraints.add(add1);
					if(!constraints.contains(add2))
						constraints.add(add2);
				}
			}
		//constraints.add("next col/row/sub");
		}
	}
	
	public void AssignValues(Sudoku board, Integer[][][] vars, ArrayList<String> constraints) {
		for(int x = 0; x < board.size(); x++)
			for(int y = 0; y < board.size(); y++)
			{
				//if the square's blank it could be any value
				if(board.get(x,y) == 0) {
					String toAdd = "";
					//constraints.add("-");//+vars[x][y][0]);
					for(int i = 0; i < vars[x][y].length; i++) {
						toAdd += vars[x][y][i].toString() + " ";
					}
					//...but only one of those
					constraints.add(toAdd);
					for(int i = 0; i < vars[x][y].length; i++)
						for(int j = i+1; j < vars[x][y].length; j++){
							constraints.add("-"+vars[x][y][i].toString()+" -"+vars[x][y][j].toString());
						}
				}
				//if its not blank one value is true and all others are false
				else {
					for(int z = 0; z <vars[x][y].length; z++) {
						if(board.get(x,y)-1 == z)
							constraints.add(vars[x][y][z].toString());
						else
							constraints.add("-"+vars[x][y][z].toString());
					}
				}
			}
	}
}
