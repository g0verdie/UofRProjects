import java.util.ArrayList;

public class JointDistTree {
	private JointDistNode head;
	
	public JointDistTree(ArrayList<RandomVariableRG> vars) {
		//initialize head
		head = new JointDistNode(vars.get(0),"head");
		for(int i = 0; i < vars.get(0).getDomain().size(); i++) {
			//System.out.println("size- "+vars.size());
			head.addChild(addVar(vars,vars.get(0).getDomain().get(i)));
		}
	}
	
	public JointDistNode addVar(ArrayList<RandomVariableRG> varsLeft,String parentDomain) {
		JointDistNode currentNode = new JointDistNode(varsLeft.get(0),parentDomain);
		ArrayList<RandomVariableRG> varsLeft1 = new ArrayList<RandomVariableRG>();
		varsLeft1.addAll(varsLeft);
		varsLeft1.remove(0);
		//if no more variables, were done adding children
		if(varsLeft.size() == 1)
			return currentNode;
		//otherwise repeat for another layer (variable)
		else {
			for(int i = 0; i < varsLeft.get(0).getDomain().size(); i++) {
				head.addChild(addVar(varsLeft1,varsLeft.get(0).getDomain().get(i)));
			}
		}
			
		return currentNode;
	}
	
	private class JointDistNode {
		private String val;
		private String name;
		public ArrayList<JointDistNode> children;
		public double probability;
		
		public JointDistNode(RandomVariableRG var,String val) {
			this.val = val;
			name = var.getName();
			children = new ArrayList<JointDistNode>(var.getDomain().size());
			this.probability = -1;
		}
		
		public void addChild(JointDistNode child) {
			this.children.add(child);
		}
		
		public void addProb(double probability) {
			this.probability = probability;
		}
	}
}
