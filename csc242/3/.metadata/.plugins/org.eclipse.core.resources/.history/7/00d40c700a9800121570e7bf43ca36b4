import java.util.*;
public class CPTRG {
	private CPTRGNode head;

	public CPTRG(ArrayList<RandomVariableRG> vars) {
		//initialize head
		head = new CPTRGNode(vars.get(0),"head");
		//for the domain of the first variable, create a child
		for(int i = 0; i < vars.get(0).getDomain().size(); i++) {
			//remove the current variable
			ArrayList<RandomVariableRG> varsLeft = vars;
			System.out.println("size- "+vars.size());
			
			varsLeft.remove(0);
			vars.get(0);
			head.addChild(addVar(varsLeft,vars.get(0).getDomain().get(i)));
		}
	}
	
	public CPTRGNode addVar(ArrayList<RandomVariableRG> varsLeft,String parentDomain) {
		CPTRGNode currentNode = new CPTRGNode(varsLeft.get(0),parentDomain);
		//if no more variables, were done adding children
		if(varsLeft.size() < 1)
			return currentNode;
		//otherwise repeat for another layer (variable)
		else {
			for(int i = 0; i < varsLeft.size(); i++) {
				ArrayList<RandomVariableRG> varsLeft1 = varsLeft;
				varsLeft1.remove(0);

				head.addChild(addVar(varsLeft,varsLeft.get(0).getDomain().get(i)));
			}
		}
			
		return currentNode;
	}
	
	public ArrayList<CPTRGNode> getLeaves() {
		ArrayList<CPTRGNode> leaves = new ArrayList<CPTRGNode>();
		for(CPTRGNode child : head.children) {
			leaves.addAll(getLeavesRec(child));
		}
		return leaves;
	}
	public ArrayList<CPTRGNode> getLeavesRec(CPTRGNode node) {
		ArrayList<CPTRGNode> leaves = new ArrayList<CPTRGNode>();
		if(node.children == null) {
			leaves.add(node);
			return leaves;
		}
		else {
			for(CPTRGNode child : node.children) {
				leaves.addAll(getLeavesRec(child));
			}
		}
		return null;
	}
	
	public void addProbs(ArrayList<Double> probabilities) {
		ArrayList<CPTRGNode> leaves = this.getLeaves();
		for(int i = 0; i < probabilities.size(); i++)
			leaves.get(i).addProb(probabilities.get(i));
			
	}

	private class CPTRGNode {
		private String val;
		private String name;
		public ArrayList<CPTRGNode> children;
		public double probability;
		
		public CPTRGNode(RandomVariableRG var,String val) {
			this.val = val;
			name = var.getName();
			children = new ArrayList<CPTRGNode>(var.getDomain().size());
			this.probability = -1;
		}
		
		public void addChild(CPTRGNode child) {
			this.children.add(child);
		}
		
		public void addProb(double probability) {
			this.probability = probability;
		}
	}
}
