import java.io.IOException;
import java.util.ArrayList;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

public class RejectionSampling {
	public static void main(String[] args) throws IOException, ParserConfigurationException, SAXException {
		//set up network
		//b = true, J = true, M = true
		XMLBIFParserRG parser = new XMLBIFParserRG();
		BayesianNetworkRG network = parser.readNetworkFromFile(args[0]);
		
		//get query
		System.out.println("setting up query");
		String[] qClause = args[1].split("=");
		BNode query = network.getNodeByName(qClause[0]);
		query.setVariable(qClause[1]);
		
		//deal with evidence variables
		System.out.println("setting up evidence");
		RejectionSampling rs = new RejectionSampling();
		double prob; 
		if(args.length > 2) {
			String[] eClauses = args[2].split(",");
			ArrayList<String[]> eFinal = new ArrayList<String[]>();
			for(int i = 0; i < eClauses.length; i++) {
				String[] eClause = eClauses[i].split("=");
				eFinal.add(eClause); 
			}
			ArrayList<BNode> eAll = setUpEvidence(eFinal,network);
			prob = rs.gibbsAsk(query,eAll,network);
		}
		else
			prob = rs.gibbsAsk(query,null,network);
		//network.print();
	}
	
	public static ArrayList<BNode> setUpEvidence(ArrayList<String[]> evidence,BayesianNetworkRG bnet) {
		ArrayList<BNode> evidenceVars = new ArrayList<BNode>();
		for(String[] clause : evidence) {
			BNode current = bnet.getNodeByName(clause[0]);
			current.setVariable(clause[1]);
			evidenceVars.add(current);
		}
		return evidenceVars;
	}
}
